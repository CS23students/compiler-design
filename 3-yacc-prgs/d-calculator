YACC (calc.y)

%{
#include <stdio.h>
#include <stdlib.h>
%}

%token NUM

%%
expr: expr '+' expr { $$ = $1 + $3; }
    | expr '-' expr { $$ = $1 - $3; }
    | expr '*' expr { $$ = $1 * $3; }
    | expr '/' expr { $$ = $1 / $3; }
    | '(' expr ')'  { $$ = $2; }
    | NUM           { $$ = $1; }
    ;

%%
int main() {
    printf("Enter expression: ");
    if (yyparse() == 0)
        printf("Result: %d\n", yylval);
    return 0;
}

int yyerror(char *s) {
    printf("Error: %s\n", s);
    return 0;
}


LEX (calc.l)
%{
#include "y.tab.h"
%}

%%
[0-9]+      { yylval = atoi(yytext); return NUM; }
[\+\-\*/\(\)] { return yytext[0]; }
[ \t\n]     ;
.           { return 0; }
%%

int yywrap() { return 1; }


